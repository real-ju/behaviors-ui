import{_ as s,c as a,o as l,S as n}from"./chunks/framework.6dd19598.js";const u=JSON.parse('{"title":"注意事项","description":"","frontmatter":{},"headers":[],"relativePath":"note.md","filePath":"note.md"}'),o={name:"note.md"},e=n(`<h1 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h1><h2 id="组件如何自定义样式" tabindex="-1">组件如何自定义样式 <a class="header-anchor" href="#组件如何自定义样式" aria-label="Permalink to &quot;组件如何自定义样式&quot;">​</a></h2><h3 id="attributes-透传机制" tabindex="-1">Attributes 透传机制 <a class="header-anchor" href="#attributes-透传机制" aria-label="Permalink to &quot;Attributes 透传机制&quot;">​</a></h3><ul><li>H5</li></ul><p>在 H5 中与 vue 表现一致，可直接在组件上写 class 和 style，默认会透传给组件根节点。</p><ul><li>微信小程序</li></ul><p>在微信小程序中，默认情况下，组件编译后会在根节点外套一层标签（类似于 CustomElement），直接在组件上写 class 和 style 不会透传到根节点。</p><p>本组件库已开启 <a href="https://uniapp.dcloud.net.cn/tutorial/vue-api.html#%E5%85%B6%E4%BB%96%E9%85%8D%E7%BD%AE" target="_blank" rel="noreferrer">virtualHost</a>，还需要在<code>manifest.json</code>中开启 <a href="https://uniapp.dcloud.net.cn/collocation/manifest.html#mp-weixin" target="_blank" rel="noreferrer">mergeVirtualHostAttributes</a>(uni-app 3.5.1+) 使 Attributes 正常透传。</p><p>uni-app 3.5.1 以下版本不支持透传，可以使用自定义样式类<code>root-class</code>和<code>root-style</code>：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">be-button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">root-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my-button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">root-style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color: red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">be-button</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="自定义样式类" tabindex="-1">自定义样式类 <a class="header-anchor" href="#自定义样式类" aria-label="Permalink to &quot;自定义样式类&quot;">​</a></h3><p>通过组件的样式相关 Props 传入自定义样式类，比如部分组件的<code>rootClass</code>，按钮组件的<code>hoverClass</code>等，然后在<code>&lt;style&gt;</code>中定义 css 规则即可。</p><ul><li>在<code>&lt;style scoped&gt;</code>中需使用<code>:deep</code>css 穿透：</li></ul><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">:deep </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">custom-class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// css rules</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>如果 css 写在第一层（没有嵌套），可能会出现部分样式不生效，这是因为组件内部 class 的优先级比较高，需要在类选择器后面添加<code>.be.deep</code>后缀提高优先级：</li></ul><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">style</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">custom-class</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">be</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">deep</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// css rules</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/</span><span style="color:#FFCB6B;">style</span><span style="color:#A6ACCD;">&gt;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>请谨慎使用<code>!important</code>，除非你确保这条 css 规则优先级永远最高。</p></div><h3 id="小程序样式隔离" tabindex="-1">小程序样式隔离 <a class="header-anchor" href="#小程序样式隔离" aria-label="Permalink to &quot;小程序样式隔离&quot;">​</a></h3><p>在自定义组件中使用 BehaviorsUI 组件时，需开启<code>styleIsolation: &#39;shared&#39;</code>选项。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">script lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">styleIsolation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shared</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,20),t=[e];function p(c,r,i,D,y,F){return l(),a("div",null,t)}const C=s(o,[["render",p]]);export{u as __pageData,C as default};
